What happens when you initialize a repository? Why do you need to do it?
	It reates a Repository to be commited 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It is intermediate stage between Repository and working area and gives us opportunity to modify the changes before commiting it to the working are.

How can you use the staging area to make sure you have one commit per logical
change?

	Before commiting each file in the staged area we can check the git diff and git diff --staged to make sure we are commiting correct file.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	With branches we can separate our main files intact while we are experimenting new featurs or different approaches. we can continue developing the main application and if nneded merge the completed and approved brancehes to master file.

How do the diagrams help you visualize the branch structure?
 	I can see what branches are at which stage and also if there is any reacable/unreachable commmits. It can help on merging different branches. We can aslo can find out where each branch started and wat type of changes have been made to each one of them.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The result branch will have common and added commits and provides final featurs of each branch. By representing it in a diagram, we can see the start and end points of each branch and their status.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
